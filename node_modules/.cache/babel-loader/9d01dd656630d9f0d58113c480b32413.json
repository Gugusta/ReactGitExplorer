{"ast":null,"code":"var _jsxFileName = \"/home/gusta/Workspace/aulas/modulo-3/primeiro-projeto-react/src/pages/Dashboard/index.tsx\";\n// Imports\nimport React, { useState, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Title, Form, Repositories, Error } from './styles';\nimport api from '../../services/api';\nimport logoImage from \"../../assets/logo.svg\"; // Interfaces\n\n// Aplication\nconst Dashboard = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState([]);\n  useEffect(() => {}, []);\n\n  async function handleAddRepository(event) {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite auto/nome do repositório');\n      return;\n    }\n\n    try {\n      const response = await api.get(`repos/${newRepo}`);\n      const repository = response.data;\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositório');\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: logoImage,\n    alt: \"Github Explorer Logo\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Explore reposit\\xF3rios no GitHub\"), /*#__PURE__*/React.createElement(Form, {\n    hasError: !!inputError,\n    onSubmit: handleAddRepository,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: newRepo,\n    onChange: e => setNewRepo(e.target.value),\n    placeholder: \"Digite o nome do reposit\\xF3rio\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, \"Pesquisar \")), inputError && /*#__PURE__*/React.createElement(Error, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 22\n    }\n  }, inputError), /*#__PURE__*/React.createElement(Repositories, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, repositories.map(repository => /*#__PURE__*/React.createElement(\"a\", {\n    key: repository.full_name,\n    href: \"teste\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: repository.owner.avatar_url,\n    alt: repository.owner.login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }, \" \", repository.full_name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 15\n    }\n  }, \" \", repository.description, \" \")), /*#__PURE__*/React.createElement(FiChevronRight, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/gusta/Workspace/aulas/modulo-3/primeiro-projeto-react/src/pages/Dashboard/index.tsx"],"names":["React","useState","useEffect","FiChevronRight","Title","Form","Repositories","Error","api","Dashboard","newRepo","setNewRepo","inputError","setInputError","repositories","setRepositories","handleAddRepository","event","preventDefault","response","get","repository","data","err","logoImage","e","target","value","map","full_name","owner","avatar_url","login","description"],"mappings":"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","sourcesContent":["// Imports\n\nimport React, { useState, FormEvent, useEffect } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\nimport api from '../../services/api';\nimport logoImage from '../../assets/logo.svg';\n\n// Interfaces\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\n// Aplication\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n  const [repositories, setRepositories] = useState<Repository[]>([]);\n\n  useEffect(() => {}, []);\n\n  async function handleAddRepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n\n    if (!newRepo) {\n      setInputError('Digite auto/nome do repositório');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`repos/${newRepo}`);\n\n      const repository = response.data;\n\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n    } catch (err) {\n      setInputError('Erro na busca por esse repositório');\n    }\n  }\n\n  return (\n    <>\n      <img src={logoImage} alt=\"Github Explorer Logo\" />\n\n      <Title>Explore repositórios no GitHub</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddRepository}>\n        <input\n          value={newRepo}\n          onChange={(e) => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do repositório\"\n        />\n        <button type=\"submit\">Pesquisar </button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map((repository) => (\n          <a key={repository.full_name} href=\"teste\">\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n\n            <div>\n              <strong> {repository.full_name} </strong>\n              <p> {repository.description} </p>\n            </div>\n\n            <FiChevronRight size={20} />\n          </a>\n        ))}\n      </Repositories>\n    </>\n  );\n};\n\nexport default Dashboard;\n"]},"metadata":{},"sourceType":"module"}